Adonay Resom (azresom@wpi.edu)

DESCRIPTION OF FILES/PROGRAMS

objqueue.cpp - This program contains a main function. It is used to demonstrate the Queue data structure
	     I implemented. The queue has two main operations enqueue and dequeue
	 
treetest.cpp - This program contains a main function. It is used to demonstrate the tree structure I
	     implemented using two classes: Tree and Tnode. Two functions, printAscending and freeTree,
	     use the inorder and postorder transveral techniques, respectively.


randomvaluetree.cpp - This program contains a main function used to demonstrate a tree structure and a random
		    string generator. A for loop was used to add data ( a random string generated by a function)
		    into a tree using an add() function and was printed using inorder transversal. And the nodes
		    were freed using postorder transversal.

Tree.cpp - 

Tree.h - this header files enables the link between gntest.cpp and GeneralNumber.cpp
	Contains definition and protypes for all classes. Also contains all the methods for 
	

makefile - this file contains instruction on how to compile, link, and run
	 the programs. It contains instructions on how to combinefiles and helper files
	 such as treetest.cpp and Tree.cpp. And also links header files  like Tree.h with
	 their respective .cpp files (like Tree.cpp) . It also creates the executable file
	 like "treetest" 

Doxyfile - Contains instructions for doxygen documentation generation

LINKING AND COMPILING

"objqueue.cpp" "treetest.cpp", "randomvaluetree.cpp", "Tree.cpp" and "Tree.h"
are processed by the makefile file. All .cpp programs' have dependencies in the makefile
to create their object codes. Most time the program itself and the header files are
used as dependencies. Then the executable file "objqueue", "treetest" and "randomvaluetree"
get created using the three object code files objqueue.o, treetest.o and randomvaluetree.o. To  run the
executable file go to the assignment's root directory and enter the command make. Then enter ./
followed by the name of the executables.
Ex: ./treetest to use the program.



TEST DATA

PROGRAM

./treetest

RUN RESULT

Creating a tree...

Part 3
Adding data to the tree...


adonay

Right:krishna

Left:basleal


Part 4

Print the tree in ascending order using inorder transversal:
Node data: adonay
Node data: basleal
Node data: kidus
Node data: krishna
Node data: yared

Part 6

Free all nodes from the tree in using postorder transversal...
Free Node: kidus
Free Node: basleal
Free Node: yared
Free Node: krishna
Free Node: adonay

Printing tree again to demonstrate freeTree():
Node data: 
Node data: 
Node data: (null)
Node data: 
Node data: 


PROGRAM 

./randomvaluetree

RUN RESULT

Node data: AGEJEZAHVN
Node data: AUQHOAKBEF
Node data: AXJXVRDTKP
Node data: BAUUKZMBBL
Node data: CMVWGGYTJZ
Node data: EWQVSDYMBM
Node data: LPPWNBUWON
Node data: UQLMNGRLSS
Node data: UTTMTQURJV
Node data: ZXHUKBNEUW

Free Node: AGEJEZAHVN
Free Node: AUQHOAKBEF
Free Node: AXJXVRDTKP
Free Node: EWQVSDYMBM
Free Node: CMVWGGYTJZ
Free Node: UQLMNGRLSS
Free Node: ZXHUKBNEUW
Free Node: UTTMTQURJV
Free Node: LPPWNBUWON
Free Node: BAUUKZMBBL


./objqueuetest
